"""autoincrement and unique source id

Revision ID: b7c9beaa5f8c
Revises: 6564e31adc72
Create Date: 2022-03-02 11:27:11.747291

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "b7c9beaa5f8c"
down_revision = "6564e31adc72"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("address", "station_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_unique_constraint(None, "address", ["station_id"])
    op.alter_column(
        "charging", "station_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.create_unique_constraint(None, "charging", ["station_id"])
    op.alter_column("stations", "source_id", existing_type=sa.VARCHAR(), nullable=False)
    op.drop_index("ix_stations_source_id", table_name="stations")
    op.create_index(
        op.f("ix_stations_source_id"), "stations", ["source_id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_stations_source_id"), table_name="stations")
    op.create_index("ix_stations_source_id", "stations", ["source_id"], unique=False)
    op.alter_column("stations", "source_id", existing_type=sa.VARCHAR(), nullable=True)
    op.drop_constraint(None, "charging", type_="unique")
    op.alter_column("charging", "station_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(None, "address", type_="unique")
    op.alter_column("address", "station_id", existing_type=sa.INTEGER(), nullable=True)

    # ### end Alembic commands ###
